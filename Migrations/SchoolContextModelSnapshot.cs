// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityDemo.DAL;

namespace UniversityDemo.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("UniversityDemo.Models.CourseModel", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 123,
                            Credits = 3,
                            Title = "Math"
                        },
                        new
                        {
                            CourseId = 234,
                            Credits = 6,
                            Title = "Bio"
                        },
                        new
                        {
                            CourseId = 432,
                            Credits = 12,
                            Title = "Physics"
                        },
                        new
                        {
                            CourseId = 110,
                            Credits = 12,
                            Title = "Chemisty"
                        });
                });

            modelBuilder.Entity("UniversityDemo.Models.EnrollmentModel", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<char>("Grade")
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentId = 1,
                            CourseId = 123,
                            Grade = 'A',
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 2,
                            CourseId = 123,
                            Grade = 'B',
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 3,
                            CourseId = 432,
                            Grade = 'A',
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 4,
                            CourseId = 110,
                            Grade = 'C',
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("UniversityDemo.Models.StudentModel", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            EnrollmentDate = new DateTime(2019, 12, 31, 0, 12, 36, 773, DateTimeKind.Local).AddTicks(3670),
                            FirstName = "William",
                            LastName = "Shakespeare"
                        },
                        new
                        {
                            StudentId = 2,
                            EnrollmentDate = new DateTime(2019, 12, 31, 0, 12, 36, 792, DateTimeKind.Local).AddTicks(1700),
                            FirstName = "James",
                            LastName = "Blake"
                        },
                        new
                        {
                            StudentId = 3,
                            EnrollmentDate = new DateTime(2019, 12, 31, 0, 12, 36, 792, DateTimeKind.Local).AddTicks(1740),
                            FirstName = "Franklin",
                            LastName = "Stein"
                        },
                        new
                        {
                            StudentId = 4,
                            EnrollmentDate = new DateTime(2019, 12, 31, 0, 12, 36, 792, DateTimeKind.Local).AddTicks(1750),
                            FirstName = "Craig",
                            LastName = "Morris"
                        });
                });

            modelBuilder.Entity("UniversityDemo.Models.EnrollmentModel", b =>
                {
                    b.HasOne("UniversityDemo.Models.CourseModel", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityDemo.Models.StudentModel", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
